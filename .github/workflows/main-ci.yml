name: Main CI
on:
  push:
    branches:
      - main

permissions:
  contents: read # for checkout

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm

      - name: Install dependencies
        run: npm clean-install

      - name: Build
        run: npm run build

      - name: Test
        run: xvfb-run --auto-servernum npm test
        shell: bash

      - name: Store coverage reports
        uses: actions/cache/save@v4
        with:
          path: |
            coverage/chrome/lcov.info
            coverage/firefox/lcov.info
          key: coverage

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

  sonar:
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis (SonarCloud)

      - uses: actions/setup-node@v4
        with:
          cache: npm

      - name: Restore coverage from cache
        uses: actions/cache/restore@v4
        with:
          path: |
            coverage/chrome/lcov.info
            coverage/firefox/lcov.info
          key: coverage
          restore-keys: coverage

      - name: Set version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(gh release view --json tagName -q .tagName)
          echo -e "\nsonar.projectVersion=$VERSION" >> sonar-project.properties

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
